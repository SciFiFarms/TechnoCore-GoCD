version: "3.5"

networks:
  gocd:
  gocd-private:

volumes:
  gocd:
  gocd_agent_1:

secrets:
  gocd_gocd_agent_1_password:
    name: ${STACK_NAME:-technocore}_gocd_gocd_agent_1_password
    external: true
  gocd_agent_1_gocd_password:
    name: ${STACK_NAME:-technocore}_gocd_agent_1_gocd_password
    external: true

services:
  ingress:
    networks:
      - gocd

  gocd:
    deploy:
      labels:
        - traefik.frontend.rule=$GOCD_ROUTING_LABEL
        - traefik.frontend.priority=$GOCD_ROUTING_LABEL_PRIORITY
        - traefik.port=8153
        - ${TRAEFIK_BASIC_AUTH}
        - traefik.enable=true
        # You'll need to set applicaiton's port here.
        - traefik.tags=ingress 
        - traefik.docker.network=${STACK_NAME:-technocore}_gocd
        # Traefik service that listens to HTTP
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.webservice.frontend.entryPoints=https
        - com.ouroboros.enable=true
      mode: global
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
      # Big services will need this modified or removed.
      #resources:
      #  limits:
      #    memory: 128M
      #  reservations:
      #    memory: 64M
    #environment:
      # Sometimes you have to pass in ${DOMAIN} to enable the correct link paths to be generated.
      # Othertimes you can use http:// or https:// for the website. Weird trick.
      #- ADMIN_USER=${ADMIN_USER}
    #image: ${image_provider:-scififarms}/technocore-gocd:${TAG:-latest}
    image: gocd/gocd-server:v19.11.0
    logging:
      driver: "${LOGGING_DRIVER}"
      options:
        tag: "{{.Name}}"
    networks:
      - gocd
      - gocd-private
    secrets:
      - source: gocd_gocd_agent_1_password
        target: gocd_agent_1_password
    volumes:
      # Likely need to change this
      - gocd:/godata
      # This should in fact be all upper case.
      #- ${DEV_MOUNT_gocd_SHELL_MIGRATIONS:-$EMPTY_MOUNT}

  gocd_agent_1:
    deploy:
      labels:
        - com.ouroboros.enable=true
      mode: global
      restart_policy:
        condition: any
    environment:
      - GO_SERVER_URL=https://gocd:8154/go
      # https://docs.gocd.org/current/advanced_usage/agent_auto_register.html
      - AGENT_AUTO_REGISTER_KEY={{"{{DOCKER-SECRET:gocd_password}}"}}
      #- AGENT_AUTO_REGISTER_RESOURCES:
      #- AGENT_AUTO_REGISTER_ENVIRONMENTS:
      #- AGENT_AUTO_REGISTER_HOSTNAME: agent1
    #image: ${image_provider:-scififarms}/technocore-gocd-db:${TAG:-latest}
    image: gocd/gocd-agent-alpine-3.9:v19.11.0
    logging:
      driver: "${LOGGING_DRIVER}"
      options:
        tag: "{{.Name}}"
    networks:
      - gocd-private
    secrets:
      - source: gocd_agent_1_gocd_password
        target: gocd_password
    volumes:
      # Likely need to change this
      - gocd_agent_1:/godata
